// system include files
#include <memory>

// user include files
#include "CommonTools/Utils/interface/StringObjectFunction.h"
#include "DataFormats/PatCandidates/interface/LookupTableRecord.h"
#include <TTree.h>

#include "UWAnalysis/NtupleTools/interface/NtupleFillerBase.h"

//
// class decleration
//
template<typename T>
class SVFitFiller : public NtupleFillerBase {
 public:
    SVFitFiller(){
    }


    SVFitFiller(const edm::ParameterSet& iConfig, TTree* t):
      NtupleFillerBase(iConfig,t),
      src_(iConfig.getParameter<edm::InputTag>("src")),
      tag_(iConfig.getParameter<std::string>("tag"))
	{
	  psMass=0;
	  psMETMass=0;
	  psMETPtMass=0;
	  x1=0.0;
	  x2=0.0;
	  t->Branch((tag_+"KineMass").c_str(),&psMass,(tag_+"KineMass/F").c_str());
	  t->Branch((tag_+"KineMETMass").c_str(),&psMETMass,(tag_+"KineMETMass/F").c_str());
	  t->Branch((tag_+"KineMETPtMass").c_str(),&psMETPtMass,(tag_+"KineMETPtMass/F").c_str());
	  t->Branch((tag_+"x1").c_str(),&x1,(tag_+"x1/F").c_str());
	  t->Branch((tag_+"x2").c_str(),&x2,(tag_+"x2/F").c_str());

	}


  ~SVFitFiller()
    { 
    }
       

  void fill(const edm::Event& iEvent, const edm::EventSetup& iSetup)
  {
    edm::Handle<std::vector<T> > handle;


    
    if(iEvent.getByLabel(src_,handle)) {
	  psMass=0;
	  psMETMass=0;
	  psMETPtMass=0;

	  if(handle->size()>0 &&handle->at(0).hasSVFitSolutions()) {
	    psMass = handle->at(0).svFitSolution("psKine")->mass(); 
	    psMETMass = handle->at(0).svFitSolution("psKine_MEt")->mass(); 
	    psMETPtMass = handle->at(0).svFitSolution("psKine_MEt_ptBalance")->mass(); 
	    x1 = handle->at(0).svFitSolution("psKine_MEt_ptBalance")->leg1().x();
	    x2 = handle->at(0).svFitSolution("psKine_MEt_ptBalance")->leg2().x();
      }

    }
    else
      {
	printf("Obj not found \n");
      }
    //    vbranch->Fill();
  }
  

 protected:
  edm::InputTag src_;
  std::string tag_;
  float psMass;

  float psMETMass;


  float psMETPtMass;
  float x1,x2;



};


#include "UWAnalysis/DataFormats/interface/CompositePtrCandidateT1T2MEt.h"
#include "UWAnalysis/DataFormats/interface/CompositePtrCandidateTMEt.h"
typedef SVFitFiller<PATMuTauPair> PATMuTauSVFitFiller;
typedef SVFitFiller<PATElecTauPair> PATEleTauSVFitFiller;
typedef SVFitFiller<PATElecMuPair> PATEleMuSVFitFiller;
typedef SVFitFiller<PATElecPair> PATEleSVFitFiller;
typedef SVFitFiller<PATMuTrackPair> PATMuTrackSVFitFiller;
typedef SVFitFiller<PATEleTrackPair> PATEleTrackSVFitFiller;
typedef SVFitFiller<PATMuPair> PATMuSVFitFiller;





